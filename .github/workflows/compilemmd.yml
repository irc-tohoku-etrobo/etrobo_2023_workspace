name: build mermaid

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "**/*.mermaid"
      - "**/*.mmd"
      - "**/*.md"

jobs:
  build:
    name: Mermaid Build
    runs-on: ubuntu-latest

    steps:
      - name: Run actions/checkout@v3
        uses: actions/checkout@v3

      - name: Setup node 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Run actions/cache@v3
        uses: actions/cache@v3
        if: steps.cache.outputs.cache-hit != 'true'
        id: yarn-cache
        with:
          path: .cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Check for Yarn and Install if Needed
        run: yarn -v || npm install -g yarn

      - name: Install dependencies
        run: yarn install

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v36

      - name: Compile Mermaid
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *".mermaid" || $file == *".md" || $file == *".mmd" ]]; then
              npx -p @mermaid-js/mermaid-cli mmdc -i $file -o  $file".svg"
            fi
          done
          
      - name: Archive Production Artifact
        uses: actions/upload-artifact@v3
        with:
          name: mermaid
          path: mermaid/*.svg

  deploy:
    name: Firebase Storage Deploy
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Run actions/checkout@v3
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: mermaid
          path: mermaid/*.svg

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
